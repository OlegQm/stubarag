services:
  mongodb:
    image: mongodb/mongodb-atlas-local:8.0.5
    hostname: "mongodb"
    container_name: stubarag-mongodb
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    env_file:
      - .env
    expose:
      - "27017"

  chromadb:
    image: chromadb/chroma:1.0.6
    container_name: stubarag-chromadb
    volumes:
      - chromadb-data:/data
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/data
      - ANONYMIZED_TELEMETRY=${ANONYMIZED_TELEMETRY:-FALSE}
    expose:
      - "8000"

  reverse-proxy:
    image: nginx:latest
    container_name: stubarag-reverse-proxy
    env_file:
      - .env
    ports:
      - 80:8501 # frontend
      - 443:443 # ssl
    volumes:
      - ./nginx/nginx-${ENV}.conf:/etc/nginx/nginx.conf
      - ./nginx/.htpasswd:/etc/apache2/.htpasswd:ro
      - ./nginx/.htpasswd_testers:/etc/apache2/.htpasswd_testers:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
      - keycloak
      - lightrag
      - llm
    links:
      - frontend
      - backend
      - keycloak
      - lightrag
      - llm

  backend:
    build: ./api/
    image: ghcr.io/devopsacid/stubarag/stubarag-backend:latest
    container_name: stubarag-backend
    depends_on:
      - mongodb
      - chromadb
    env_file:
      - .env
    environment:
      - DEBUG_MODE=1
      - TZ=Europe/Bratislava
      - EMBEDDING_MODEL=text-embedding-3-large
      - DEV_USER=admin # user which saves the data into vectordb
      - CHROMA_COLLECTION_NAME=knowledge
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=stubarag
      - MONGODB_HISTORY_COLLECTION=history
    expose:
      - "8080"
    links:
      - mongodb
      - chromadb

  llm:
    build:
      context: ./
      dockerfile: ./llm/Dockerfile
    image: ghcr.io/devopsacid/stubarag/stubarag-llm:latest
    container_name: stubarag-llm
    depends_on:
      - backend
      - mongodb
      - lightrag
    env_file:
      - .env
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=stubarag
      - MONGODB_HISTORY_COLLECTION=history
      - DEBUG_MODE=1
      - BASE_URL=https://dev.agentkovac.sk
      - TZ=Europe/Bratislava
    expose:
      - "8507"
    links:
      - mongodb
      - chromadb
      - backend
      - lightrag

  lightrag:
    build:
      context: https://github.com/HKUDS/LightRAG.git#v1.3.3
      dockerfile: Dockerfile
    image: ghcr.io/devopsacid/stubarag/lightrag:latest
    container_name: lightrag
    expose:
      - "9621"
    volumes:
      - ./lightrag/data/rag_storage:/app/data/rag_storage
      - ./lightrag/data/inputs:/app/data/inputs
      - ./lightrag/config.ini:/app/config.ini
    environment:
      - TZ=UTC
      - HOST=0.0.0.0
      - PORT=9621
      - WORKERS=4
      - CORS_ORIGINS=http://dev.agentkovac.sk
      - VITE_BACKEND_URL=http://dev.agentkovac.sk/lightrag
      - VITE_API_PROXY=true
      - VITE_API_ENDPOINTS=/,/api,/documents,/graphs,/graph,/health,/query,/docs,/openapi.json,/login,/auth-status
      - LIGHTRAG_KV_STORAGE=MongoKVStorage
      - LIGHTRAG_VECTOR_STORAGE=MongoVectorDBStorage
      - LIGHTRAG_GRAPH_STORAGE=Neo4JStorage
      - LIGHTRAG_DOC_STATUS_STORAGE=JsonDocStatusStorage
      - MONGO_URI=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongodb:27017/
      - MONGO_DATABASE=lightrag_knowledge
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${MONGODB_PASSWORD}
      - LLM_BINDING=openai
      - LLM_MODEL=gpt-4.1-mini
      - LLM_BINDING_HOST=https://api.openai.com/v1
      - LLM_BINDING_API_KEY=${OPENAI_API_KEY}
      - MAX_PARALLEL_INSERT=4
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EMBEDDING_BINDING=openai
      - EMBEDDING_BINDING_HOST=https://api.openai.com/v1
      - EMBEDDING_MODEL=text-embedding-3-large
      - EMBEDDING_DIM=3072
      - SUMMARY_LANGUAGE=Slovak
      - AUTH_ACCOUNTS=${REVERSE_PROXY_ADMIN}
      - TOKEN_SECRET=924cefaf8a70d5193fdeb9acdccda9031060b6b6f277bddee823fc0633855063e4fd0ced5e14860eee223d4a687c9bcfe131ded6bc53c47ddd68fb2764b4fde1041bca4b45036098fb15eabf599c74331f40da3cae5c4cc3d11a48b3f6096a47f7e980800b2ec985b3375beaa42318f31cb7f4e6e0dbd6c8741c668c05f51b737c77472dd8670d3b67dd7410f528440864264faeaab773b6685ec339d124a701e4980d41e80551453b686c4dc3276757ce0f2f26aab82ac5392183e9fb61c362fb9b7a9bb4a3edcf4fcc3ae2c2a1bc8b5f4c60115c8dd23cd6c5e5b787d711a32ac2508d815cb0100eb8d9be7a4b886f0224b8b7bf660800fe4308e2da1801038ae8ee5cd5bbb2b246858f4e5ca478868fbce3ba12bbfb2c5118469a67de9b07cb0f21f82a07db754de9e29f33c49d73fe92be366f5070fe43bbe497a50f52d71e8dbce2c17b7ffa9fab6ec69ee8c97cac0a8d10a2e3cfd54f219b0c352160a832c69de9702e941d55851cb60cbf290738b6a5e47e488532f27ec9afc9c1c135aa398fe449cdd5271cff08f337abd5bae2d82d7f0a76ef3f88b889aa0bd2d9d64a23be16c257db34e95fd9598c2ca3d769d4238d3112bfbcc98c153c5ec2889dcc97fd67436fa1f0935a7de01f4c6e0884d8e4db93d6a316a44a34ff089823cae8e0940661a6581fae5bafb460c50d76f889633a3e4030131042e5ba0e8366df
      - TOKEN_EXPIRE_HOURS=4
      - WHITELIST_PATHS=/query
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_started 
      neo4j:
        condition: service_healthy
    links:
      - mongodb
      - neo4j

  neo4j:
    image: neo4j:5.26.5-community
    container_name: neo4j
    volumes:
      - neo4j-logs:/logs
      - neo4j-config:/config
      - neo4j-data:/data
      - neo4j-plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/${MONGODB_PASSWORD}
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_server_bolt_listen__address=0.0.0.0:7687
      - NEO4J_server_bolt_advertised__address=neo4j:7687
    expose:
      - "7687"
    restart: always
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${MONGODB_PASSWORD}", "RETURN 1"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

  frontend:
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    image: ghcr.io/devopsacid/stubarag/stubarag-frontend:latest
    container_name: stubarag-frontend
    depends_on:
      - llm
      - backend
      - mongodb
    env_file:
      - .env
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=stubarag
      - MONGODB_HISTORY_COLLECTION=history
      - GUEST_MODE=1
      - DEBUG_MODE=1
      - TZ=Europe/Bratislava

      - AUTHORIZE_URL=https://${FRONTEND_HOSTNAME}/keycloak/realms/feirag/protocol/openid-connect/auth
      - TOKEN_URL=http://keycloak:8088/realms/feirag/protocol/openid-connect/token
      - REFRESH_TOKEN_URL=http://keycloak:8088/realms/feirag/protocol/openid-connect/token
      - LOGOUT_URL=http://keycloak:8088/realms/feirag/protocol/openid-connect/logout
      - REDIRECT_URI=https://${FRONTEND_HOSTNAME}/chat-app

      # Client secret just for dev phase, regenerate and move to .env before prod
      - CLIENT_SECRET=0JDd3tGuNwpFZuwZyOouSMM2MG98xmko
      - CLIENT_ID=chat_app_client
      - SCOPE=openid email profile
      - STREAMLIT_CLIENT_SHOW_ERROR_DETAILS=full
      - STREAMLIT_CLIENT_TOOLBAR_MODE=developer
      - STREAMLIT_LOGGER_LEVEL=debug
    expose:
      - "8501"
    links:
      - mongodb
      - chromadb
      - backend
      - keycloak
      - llm

  admin:
    build:
      context: ./
      dockerfile: ./admin/Dockerfile
    image: ghcr.io/devopsacid/stubarag/stubarag-admin:latest
    container_name: stubarag-admin
    depends_on:
      - backend
      - mongodb
    env_file:
      - .env
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=stubarag
      - MONGODB_HISTORY_COLLECTION=history
      - GUEST_MODE=1
      - DEBUG_MODE=1
      - TZ=Europe/Bratislava
      - AUTHORIZE_URL=https://${FRONTEND_HOSTNAME}/keycloak/realms/feirag/protocol/openid-connect/auth
      - TOKEN_URL=http://keycloak:8088/realms/feirag/protocol/openid-connect/token
      - REFRESH_TOKEN_URL=http://keycloak:8088/realms/feirag/protocol/openid-connect/token
      - LOGOUT_URL=http://keycloak:8088/realms/feirag/protocol/openid-connect/logout
      - REDIRECT_URI=https://${FRONTEND_HOSTNAME}/admin

      # Client secret just for dev phase, regenerate and move to .env before prod
      - CLIENT_SECRET=dYQqj9nYH8lZiGTUoBAKkTCRxtrm4Jx1
      - CLIENT_ID=admin_client
      - SCOPE=openid email profile
      - STREAMLIT_CLIENT_SHOW_ERROR_DETAILS=full
      - STREAMLIT_CLIENT_TOOLBAR_MODE=developer
      - STREAMLIT_LOGGER_LEVEL=debug
    expose:
      - "8502"
    links:
      - mongodb
      - chromadb
      - backend
      - keycloak

  discord:
    build:
      context: ./
      dockerfile: ./discord-chatbot/Dockerfile
    image: ghcr.io/devopsacid/stubarag/discord-chatbot:latest
    container_name: discord-chatbot
    depends_on:
      - llm
      - backend
      - mongodb
    env_file:
      - .env
    environment:
      - DEBUG_MODE=1
      - TZ=Europe/Bratislava
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=stubarag
      - MONGODB_HISTORY_COLLECTION=history
      - FEI_NEWS_SERVER=skuty's AI test server
      - FEI_NEWS_CHANNEL=news
      - FEI_NEWS_AUTHOR=.skuty.
    expose:
      - "8505"
    links:
      - mongodb
      - chromadb
      - backend

  keycloak:
    image: keycloak/keycloak:26.1.2
    container_name: keycloak
    env_file:
      - .env
    environment:
      # Other parameters
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres/keycloakdb
      - KC_PROXY_HEADERS=xforwarded
      - KC_HOSTNAME_STRICT=false
      - KC_HTTPS_ENABLED=false
      - KC_HTTP_ENABLED=true
      - PROXY_ADDRESS_FORWARDING=true
      - KC_HOSTNAME=https://${FRONTEND_HOSTNAME}/keycloak
    expose:
      - "8088"
    volumes:
      - ./keycloak/${ENV}:/opt/keycloak/data/import
      - ./keycloak/theme:/opt/keycloak/themes
    depends_on:
      - postgres
    links:
      - postgres
    command:
      - start
      - --import-realm
      - --http-port=8088

  postgres:
    image: postgres:17
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=keycloakdb
    expose:
      - "5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email michal@maxian.sk -d dev.agentkovac.sk --agree-tos
    profiles: ["certbot"]
    links:
      - reverse-proxy

volumes:
  postgres:
    driver: local
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local
  chromadb-data:
    driver: local
  neo4j-logs:
    driver: local
  neo4j-config:
    driver: local
  neo4j-data:
    driver: local
  neo4j-plugins:
    driver: local